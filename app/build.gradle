apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "es.edufdezsoy.manga2kindle"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 7
        versionName "2.0-RC4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions "mock"
    productFlavors {
        prod {
            dimension "mock"
            packagingOptions {
                exclude 'src/mock/*'
            }
        }
        mock {
            dimension "mock"
            applicationIdSuffix ".mock"
            versionNameSuffix "-CI"
        }
    }
}

def build_param = "${build}"
if (build_param == "devCI") {
    print "devCI build"
    // Exclude all except mockDebug flavor
    android.variantFilter { variant ->
        if (variant.getFlavors().get(0).name != 'mock' || variant.buildType.name != 'debug') {
            variant.setIgnore(true)
        }
    }
} else if (build_param == "releaseCI") {
    print "releaseCI build"
    // Exclude all except prodRelease flavor
    android.variantFilter { variant ->
        if (variant.getFlavors().get(0).name != 'prod' || variant.buildType.name != 'release') {
            variant.setIgnore(true)
        }
    }
} else {
    print "Debug build"
    // Normal local machine dev
    // Exclude mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.50'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-rc01'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // ROOM IMPLEMENTATION
    implementation 'androidx.room:room-runtime:2.2.1'
    annotationProcessor 'androidx.room:room-compiler:2.2.1'
    kapt 'androidx.room:room-compiler:2.2.1'
    implementation 'androidx.room:room-ktx:2.2.1' // Kotlin Extensions
    testImplementation 'androidx.room:room-testing:2.2.1'

    // RETROFIT AND SO
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0' // used for loggiin net calls

    // IO
    implementation 'commons-io:commons-io:2.6'

    // MATERIAL DRAWER
    implementation 'com.mikepenz:materialdrawer:7.0.0-rc08'
    implementation 'com.mikepenz:iconics-core:4.0.0'
    implementation 'com.mikepenz:fastadapter:4.1.0'
    implementation 'com.mikepenz:fastadapter-extensions-expandable:4.1.0'
    implementation 'com.mikepenz:materialize:1.2.1'
    implementation 'com.google.android.material:material:1.2.0-alpha01'

    // ABOUT PAGE
    implementation 'com.github.medyo:android-about-page:1.2.5'

    // CONDUCTOR (https://github.com/bluelinelabs/Conductor)
    implementation 'com.bluelinelabs:conductor:2.1.5'

    // PREFERENCES
    implementation "androidx.legacy:legacy-preference-v14:1.0.0"
    implementation "androidx.preference:preference:1.1.0"
    implementation 'com.github.inorichi:conductor-support-preference:78e2344'

    // FIREBASE
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    // CRASHLYTICS
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // SWEET ALERT DIALOGS
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
}
